{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "http://adaptivecards.io/schemas/adaptive-card.json",
  "type": "object",
  "title": "Microsoft Adaptive Card Schema",
  "additionalProperties": true,
  "allOf": [
    {
      "$ref": "#/definitions/AdaptiveCard"
    }
  ],
  "properties": {
    "templateMeta": {
      "type": "object",
      "description": "Holds meta data.",
      "properties": {
        "card": {
          "type": "object",
          "description": "Meta information about this card",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the card, kebab cased."
            },
            "hash": {
              "type": "string",
              "description": "Hash of the card."
            },
            "version": {
              "type": "string",
              "description": "Version of this card."
            },
            "author": {
              "type": "string",
              "description": "Author of this card."
            }
          }
        },
        "ui": {
          "type": "object",
          "description": "Data to be shown on the card interface.",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title to be displayed on the card."
            },
            "controls": {
              "type": "object",
              "description": "Controls for the card",
              "properties": {
                "subscription": {
                  "type": "boolean",
                  "description": "Whether a user can subscribe to this card."
                },
                "tableOfContents": {
                  "type": "boolean",
                  "description": "Whether to display the table of contents."
                }
              }
            }
          }
        },
        "data": {
          "type": "object",
          "description": "Data required for the card.",
          "properties": {
            "classification": {
              "type": "string",
              "description": "Classification of the card."
            },
            "idTemplate": {
              "type": "string",
              "description": "ID template of the card."
            },
            "category": {
              "type": "string",
              "description": "Category of the card."
            }
          }
        }
      }
    },
    "hooks": {
      "type": "object",
      "description": "Defines actions to be taken during different stages of a card execution",
      "properties": {
        "afterSubmit": {
          "type": "object",
          "description": "Actions to be executed in order after the card has been submitted.",
          "properties": {
            "actions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Action"
              }
            }
          }
        }
      }
    },
    "version": {
      "type": "string",
      "description": "Schema version that this card requires. If a client is **lower** than this version, the `fallbackText` will be rendered.",
      "examples": [
        "1.0",
        "1.1"
      ]
    },
    "fallbackText": {
      "type": "string",
      "description": "Text shown when the client doesn't support the version specified (may contain markdown)."
    },
    "backgroundImage": {
      "type": "string",
      "description": "An image to use as the background of the card."
    },
    "speak": {
      "type": "string",
      "description": "Specifies what should be spoken for this entire card. This is simple text or SSML fragment."
    },
    "lang": {
      "type": "string",
      "description": "The 2-letter ISO-639-1 language used in the card. Used to localize any date/time functions.",
      "examples": [
        "en",
        "fr",
        "es"
      ]
    }
  },
  "required": [
    "version"
  ],
  "definitions": {
    "CardscriptField": {
      "additionalProperties": true,
      "description": "Adds various properties to extend base Input types.",
      "properties": {
        "icon": {
          "type": "string",
          "description": "Name of an icon to display alongside this element."
        },
        "title": {
          "type": "string",
          "description": "Strong text to clearly identify the intent of the element.",
          "examples": [
            "Your date of birth"
          ]
        }
      },
      "type": "object"
    },
    "Action": {
      "anyOf": [
        {
          "$ref": "#/definitions/Action.Submit"
        },
        {
          "$ref": "#/definitions/Action.ShowCard"
        },
        {
          "$ref": "#/definitions/Action.OpenUrl"
        },
        {
          "$ref": "#/definitions/Action.Cancel"
        },
        {
          "$ref": "#/definitions/Action.Save"
        },
        {
          "$ref": "#/definitions/Action.PushCard"
        },
        {
          "$ref": "#/definitions/Action.ReplaceCard"
        },
        {
          "$ref": "#/definitions/Action.RefreshRemit"
        },
        {
          "$ref": "#/definitions/Action.RefreshTasks"
        },
        {
          "$ref": "#/definitions/Action.RefreshWatching"
        }
      ]
    },
    "Action.RefreshTasks": {
      "additionalProperties": true,
      "description": "When invoked this will refresh the users tasks.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.RefreshTasks\"`"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Action.RefreshWatching": {
      "additionalProperties": true,
      "description": "When invoked this will refresh the users watched cards.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.RefreshWatching\"`"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Action.RefreshRemit": {
      "additionalProperties": true,
      "description": "When invoked this will refresh the app's remit.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.RefreshRemit\"`"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Action.PushCard": {
      "additionalProperties": true,
      "description": "When invoked this will push the new card on the routing history.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.PushCard\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "stateMachineName": {
          "type": "string",
          "description": "The state machine to launch."
        },
        "input": {
          "type": "object",
          "description": "The input to launch with."
        }
      },
      "required": [
        "type",
        "stateMachineName"
      ],
      "type": "object"
    },
    "Action.ReplaceCard": {
      "additionalProperties": true,
      "description": "When invoked this will replace the current entry in the history with the new route.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.ReplaceCard\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "stateMachineName": {
          "type": "string",
          "description": "The state machine to launch."
        },
        "input": {
          "type": "object",
          "description": "The input to launch with."
        }
      },
      "required": [
        "type",
        "stateMachineName"
      ],
      "type": "object"
    },
    "Action.OpenUrl": {
      "additionalProperties": true,
      "description": "When invoked, show the given url either by launching it in an external web browser or showing in-situ with embedded web browser.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.OpenUrl\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "iconUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional icon to be shown on the action in conjunction with the title",
          "version": "1.1"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to open."
        }
      },
      "required": [
        "type",
        "url"
      ],
      "type": "object"
    },
    "Action.ShowCard": {
      "type": "object",
      "additionalProperties": true,
      "description": "Defines an AdaptiveCard which is shown to the user when the button or link is clicked.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.ShowCard\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "iconUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional icon to be shown on the action in conjunction with the title",
          "version": "1.1"
        },
        "card": {
          "$ref": "#/definitions/AdaptiveCard"
        }
      },
      "required": [
        "type",
        "card"
      ]
    },
    "Action.Cancel": {
      "type": "object",
      "additionalProperties": true,
      "description": "Allows to cancel out of a form.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.Cancel\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "iconUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional icon to be shown on the action in conjunction with the title",
          "version": "1.1"
        }
      },
      "required": [
        "type"
      ]
    },
    "Action.Save": {
      "type": "object",
      "additionalProperties": true,
      "description": "Allows to save a form to continue later.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.Save\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "iconUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional icon to be shown on the action in conjunction with the title",
          "version": "1.1"
        }
      },
      "required": [
        "type"
      ]
    },
    "Action.Submit": {
      "type": "object",
      "additionalProperties": true,
      "description": "Gathers input fields, merges with optional data field, and sends an event to the client. It is up to the client to determine how this data is processed. For example: With BotFramework bots, the client would send an activity through the messaging medium to the bot.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Action.Submit\"`."
        },
        "title": {
          "type": "string",
          "description": "Label for button or link that represents this action."
        },
        "iconUrl": {
          "type": "string",
          "format": "uri",
          "description": "Optional icon to be shown on the action in conjunction with the title",
          "version": "1.1"
        },
        "data": {
          "type": [
            "string",
            "object"
          ],
          "description": "Initial data that input fields will be combined with. These are essentially 'hidden' properties."
        }
      },
      "required": [
        "type"
      ]
    },
    "Actions": {
      "additionalItems": true,
      "items": {
        "$ref": "#/definitions/Action"
      },
      "type": "array"
    },
    "AdaptiveCard": {
      "additionalProperties": true,
      "type": "object",
      "description": "Root element in an Adaptive Card.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"AdaptiveCard\"`.",
          "enum": [
            "AdaptiveCard"
          ]
        },
        "actions": {
          "description": "The Actions to show in the card's action bar.",
          "$ref": "#/definitions/Actions"
        },
        "body": {
          "description": "The card elements to show in the primary card region.",
          "$ref": "#/definitions/CardElements"
        },
        "selectAction": {
          "description": "An Action that will be invoked when the card is tapped or selected. `Action.ShowCard` is not supported.",
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/Action.Submit"
            },
            {
              "$ref": "#/definitions/Action.OpenUrl"
            }
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "CardElement": {
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "spacing": {
          "$ref": "#/definitions/SpacingStyle"
        },
        "separator": {
          "type": "boolean",
          "description": "When `true`, draw a separating line at the top of the element.",
          "default": false
        }
      },
      "required": [
        "type"
      ]
    },
    "CardElements": {
      "type": "array",
      "additionalItems": true,
      "items": [
        {
          "anyOf": [
            {
              "$ref": "#/definitions/TextBlock"
            },
            {
              "$ref": "#/definitions/Table"
            },
            {
              "$ref": "#/definitions/List"
            },
            {
              "$ref": "#/definitions/Tree"
            },
            {
              "$ref": "#/definitions/Media"
            },
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "#/definitions/Container"
            },
            {
              "$ref": "#/definitions/ColumnSet"
            },
            {
              "$ref": "#/definitions/TabSet"
            },
            {
              "$ref": "#/definitions/ActionSet"
            },
            {
              "$ref": "#/definitions/FactSet"
            },
            {
              "$ref": "#/definitions/ImageSet"
            },
            {
              "$ref": "#/definitions/Input.Text"
            },
            {
              "$ref": "#/definitions/Input.Slider"
            },
            {
              "$ref": "#/definitions/Input.Number"
            },
            {
              "$ref": "#/definitions/Input.Date"
            },
            {
              "$ref": "#/definitions/Input.Time"
            },
            {
              "$ref": "#/definitions/Input.Toggle"
            },
            {
              "$ref": "#/definitions/Input.ChoiceSet"
            },
            {
              "$ref": "#/definitions/Input.FileUpload"
            },
            {
              "$ref": "#/definitions/Input.Email"
            },
            {
              "$ref": "#/definitions/Input.Currency"
            },
            {
              "$ref": "#/definitions/Input.Address"
            },
            {
              "$ref": "#/definitions/Input.ApiLookup"
            },
            {
              "$ref": "#/definitions/Input.Gender"
            },
            {
              "$ref": "#/definitions/Input.Name"
            },
            {
              "$ref": "#/definitions/Input.Signature"
            },
            {
              "$ref": "#/definitions/Input.TelephoneNumber"
            },
            {
              "$ref": "#/definitions/Input.DateTime"
            },
            {
              "$ref": "#/definitions/AddressBlock"
            },
            {
              "$ref": "#/definitions/Map"
            },
            {
              "$ref": "#/definitions/PhaseBanner"
            },
            {
              "$ref": "#/definitions/Separator"
            },
            {
              "$ref": "#/definitions/Jumbotron"
            },
            {
              "$ref": "#/definitions/Collapsible"
            },
            {
              "$ref": "#/definitions/Chip"
            },
            {
              "$ref": "#/definitions/CardList"
            },
            {
              "$ref": "#/definitions/Graph"
            }
          ]
        }
      ]
    },
    "Input.Choice": {
      "type": "object",
      "description": "Describes a choice for use in a ChoiceSet.",
      "additionalProperties": true,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Input.Choice"
          ]
        },
        "title": {
          "type": "string",
          "description": "Text to display."
        },
        "icon": {
          "type": "string",
          "description": "Name of an icon to display for the choice."
        },
        "value": {
          "type": "string",
          "description": "The raw value for the choice. **NOTE:** do not use a `,` in the value, since a `ChoiceSet` with `isMultiSelect` set to `true` returns a comma-delimited string of choice values."
        }
      },
      "required": [
        "title",
        "value"
      ]
    },
    "ChoiceInputStyle": {
      "type": "string",
      "description": "Style hint for `Input.ChoiceSet`.",
      "default": "compact",
      "enum": [
        "compact",
        "expanded"
      ]
    },
    "Tab": {
      "additionalProperties": true,
      "type": "object",
      "description": "Defines a container that is part of a TabSet.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Tab\"`.",
          "enum": [
            "Tab"
          ]
        },
        "items": {
          "description": "The card elements to include in the `Tab`.",
          "$ref": "#/definitions/CardElements"
        },
        "title": {
          "type": "string",
          "description": "The title of the `Tab`."
        }
      },
      "required": [
        "items",
        "title"
      ]
    },
    "Column": {
      "additionalProperties": true,
      "type": "object",
      "description": "Defines a container that is part of a ColumnSet.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "items": {
          "description": "The card elements to include in the `Column`.",
          "$ref": "#/definitions/CardElements"
        },
        "selectAction": {
          "description": "An Action that will be invoked when the `Column` is tapped or selected. `Action.ShowCard` is not supported.",
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/Action.Submit"
            },
            {
              "$ref": "#/definitions/Action.OpenUrl"
            }
          ]
        },
        "style": {
          "type": "string",
          "description": "Style hint for `Column`.",
          "enum": [
            "default",
            "emphasis"
          ]
        },
        "width": {
          "type": [
            "string",
            "number"
          ],
          "description": "`\"auto\"`, `\"stretch\"`, or a number representing relative width of the column in the column group."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Column\"`.",
          "enum": [
            "Column"
          ]
        }
      },
      "required": [
        "items"
      ]
    },
    "ActionSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "ActionSet allows actions to be displayed within a card.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"ActionSet\"`.",
          "enum": [
            "ActionSet"
          ]
        },
        "actions": {
          "description": "The Actions to show in the card's action bar.",
          "$ref": "#/definitions/Actions"
        },
        "spacing": {
          "$ref": "#/definitions/SpacingStyle"
        },
        "actionStyle": {
          "type": "string",
          "description": "How to display the action set.",
          "enum": [
            "list",
            "dropdown"
          ],
          "default": "list"
        },
        "label": {
          "type": "string",
          "description": "Text displayed as label if ActionSet is in dropdown style."
        }
      },
      "required": [
        "type",
        "actions"
      ]
    },
    "TabSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "TabSet allows to display content through various tabs.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"TabSet\"`.",
          "enum": [
            "TabSet"
          ]
        },
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "tabs": {
          "type": "array",
          "description": "The array of `Tabs` to divide content.",
          "items": {
            "$ref": "#/definitions/Tab"
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "ColumnSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "ColumnSet divides a region into Columns, allowing elements to sit side-by-side.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "columns": {
          "type": "array",
          "description": "The array of `Columns` to divide the region into.",
          "items": {
            "$ref": "#/definitions/Column"
          }
        },
        "selectAction": {
          "description": "An Action that will be invoked when the `ColumnSet` is tapped or selected. `Action.ShowCard` is not supported.",
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/Action.Submit"
            },
            {
              "$ref": "#/definitions/Action.OpenUrl"
            }
          ]
        },
        "type": {
          "type": "string",
          "description": "Must be `\"ColumnSet\"`.",
          "enum": [
            "ColumnSet"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Container": {
      "additionalProperties": true,
      "type": "object",
      "description": "Containers group items together.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Container\"`.",
          "enum": [
            "Container"
          ]
        },
        "color": {
          "type": "string",
          "description": "Controls the color of the Container.",
          "enum": [
            "default",
            "dark",
            "light",
            "accent",
            "good",
            "warning",
            "attention"
          ]
        },
        "items": {
          "description": "The card elements to render inside the `Container`.",
          "$ref": "#/definitions/CardElements"
        },
        "selectAction": {
          "description": "An Action that will be invoked when the `Container` is tapped or selected. `Action.ShowCard` is not supported.",
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/Action.Submit"
            },
            {
              "$ref": "#/definitions/Action.OpenUrl"
            }
          ]
        },
        "style": {
          "type": "string",
          "description": "Style hint for `Container`.",
          "enum": [
            "default",
            "emphasis"
          ]
        },
        "verticalContentAlignment": {
          "type": "string",
          "description": "Defines how the content should be aligned vertically within the container.",
          "default": "top",
          "enum:": [
            "top",
            "center",
            "bottom"
          ],
          "version": "1.1"
        }
      },
      "required": [
        "type",
        "items"
      ]
    },
    "Fact": {
      "additionalProperties": true,
      "type": "object",
      "description": "Describes a Fact in a FactSet as a key/value pair.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "Fact"
          ]
        },
        "title": {
          "type": "string",
          "description": "The title of the fact."
        },
        "value": {
          "type": "string",
          "description": "The value of the fact."
        }
      },
      "required": [
        "title",
        "value"
      ]
    },
    "FactSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "The FactSet element displays a series of facts (i.e. name/value pairs) in a tabular form.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "facts": {
          "type": "array",
          "description": "The array of `Fact`s.",
          "items": {
            "$ref": "#/definitions/Fact"
          }
        },
        "type": {
          "type": "string",
          "description": "Must be `\"FactSet\"`.",
          "enum": [
            "FactSet"
          ]
        }
      },
      "required": [
        "type",
        "facts"
      ]
    },
    "HorizontalAlignment": {
      "type": "string",
      "description": "Controls how elements are horizontally positioned within their container.",
      "default": "left",
      "enum": [
        "left",
        "center",
        "right"
      ]
    },
    "MediaSource": {
      "additionalProperties": true,
      "type": "object",
      "description": "Defines a source for a Media element",
      "version": "1.1",
      "properties": {
        "type": {
          "type": "string",
          "description": "Whether the media is audio or video.",
          "enum": [
            "video",
            "audio"
          ]
        },
        "mimeType": {
          "type": "string",
          "description": "Mime type of associated media (e.g. `\"video/mp4\"`)."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to media."
        }
      },
      "required": [
        "type",
        "mimeType",
        "url"
      ]
    },
    "AddressBlock": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays an address.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"AddressBlock\"`.",
          "enum": [
            "AddressBlock"
          ]
        },
        "title": {
          "type": "string",
          "description": "Title of the AddressBlock.",
          "default": "Address"
        },
        "dataPath": {
          "type": "string",
          "description": "Points to the holding the address."
        },
        "multiline": {
          "type": "boolean",
          "default": true,
          "description": "Wether the address in multiple lines."
        },
        "lineDelimited": {
          "type": "string",
          "default": ",",
          "description": "The string of character(s) which the address is delimited by."
        }
      },
      "required": [
        "type",
        "dataPath"
      ]
    },
    "Graph": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays a graph.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Graph\"`.",
          "enum": [
            "Graph"
          ]
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "Map": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays a map.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Map\"`.",
          "enum": [
            "Map"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "PhaseBanner": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays a banner highlighting a phase.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"PhaseBanner\"`.",
          "enum": [
            "PhaseBanner"
          ]
        },
        "phase": {
          "type": "string",
          "description": "The phase which the service is in.",
          "enum": [
            "alpha",
            "beta"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Separator": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays a horizontal line.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Separator\"`.",
          "enum": [
            "Separator"
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "Media": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays a media player for audio or video content.",
      "version": "1.1",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Media\"`.",
          "enum": [
            "Media"
          ]
        },
        "sources": {
          "type": "array",
          "description": "Array of media sources to attempt to play.",
          "items": {
            "$ref": "#/definitions/MediaSource"
          }
        },
        "poster": {
          "type": "string",
          "format": "uri",
          "description": "URL of an image to display before playing."
        },
        "altText": {
          "type": "string",
          "description": "Alternate text describing the audio or video."
        }
      },
      "required": [
        "type"
      ]
    },
    "Image": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays an image.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "altText": {
          "type": "string",
          "description": "Alternate text describing the image."
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/HorizontalAlignment"
        },
        "selectAction": {
          "description": "An Action that will be invoked when the `Image` is tapped or selected. `Action.ShowCard` is not supported.",
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/Action.Submit"
            },
            {
              "$ref": "#/definitions/Action.OpenUrl"
            }
          ]
        },
        "size": {
          "$ref": "#/definitions/ImageSize"
        },
        "style": {
          "$ref": "#/definitions/ImageStyle"
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Image\"`.",
          "enum": [
            "Image"
          ]
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "The URL to the image."
        }
      },
      "required": [
        "type",
        "url"
      ]
    },
    "ImageSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "The ImageSet displays a collection of Images similar to a gallery.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "images": {
          "type": "array",
          "description": "The array of `Image` elements to show.",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "imageSize": {
          "$ref": "#/definitions/ImageSize"
        },
        "type": {
          "type": "string",
          "description": "Must be `\"ImageSet\"`.",
          "enum": [
            "ImageSet"
          ]
        }
      },
      "required": [
        "type",
        "images"
      ]
    },
    "ImageSize": {
      "type": "string",
      "description": "Controls the approximate size of the image. The physical dimensions will vary per host. Specify `\"auto\"` for true image dimension, or `\"stretch\"` to force it to fill the container.",
      "default": "auto",
      "enum": [
        "auto",
        "stretch",
        "small",
        "medium",
        "large"
      ]
    },
    "ImageStyle": {
      "type": "string",
      "description": "Controls how this `Image` is displayed.",
      "enum": [
        "default",
        "person"
      ]
    },
    "Input.ChoiceSet": {
      "additionalProperties": true,
      "type": "object",
      "description": "Allows a user to input a Choice.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        },
        {
          "$ref": "#/definitions/CardscriptField"
        }
      ],
      "properties": {
        "choices": {
          "type": "array",
          "description": "`Choice` options.",
          "items": {
            "$ref": "#/definitions/Input.Choice"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "isMultiSelect": {
          "type": "boolean",
          "description": "Allow multiple choices to be selected.",
          "default": false
        },
        "style": {
          "$ref": "#/definitions/ChoiceInputStyle"
        },
        "type": {
          "description": "Must be `\"Input.ChoiceInput\"`.",
          "enum": [
            "Input.ChoiceSet"
          ],
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "The initial choice (or set of choices) that should be selected. For multi-select, specify a comma-separated string of values."
        }
      },
      "required": [
        "type",
        "id",
        "choices"
      ]
    },
    "Input.Date": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user choose a date.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "max": {
          "type": "string",
          "description": "Hint of maximum value expressed in ISO-8601 format (may be ignored by some clients)."
        },
        "min": {
          "type": "string",
          "description": "Hint of minimum value expressed in ISO-8601 format (may be ignored by some clients)."
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no selection has been made."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Date\"`.",
          "enum": [
            "Input.Date"
          ]
        },
        "value": {
          "type": "string",
          "description": "The initial value for this field expressed in ISO-8601 format."
        },
        "clearable": {
          "type": "boolean",
          "description": "Whether the user can clear the data."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Number": {
      "additionalProperties": true,
      "type": "object",
      "description": "Allows a user to enter a number.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "max": {
          "type": "number",
          "description": "Hint of maximum value (may be ignored by some clients)."
        },
        "min": {
          "type": "number",
          "description": "Hint of minimum value (may be ignored by some clients)."
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no selection has been made."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Number\"`.",
          "enum": [
            "Input.Number"
          ]
        },
        "value": {
          "type": "number",
          "description": "Initial value for this field."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Slider": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter value with a slider.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Slider\"`.",
          "enum": [
            "Input.Slider"
          ]
        },
        "min": {
          "type": "number",
          "description": "Minimum value of the model.",
          "default": 1
        },
        "max": {
          "type": "number",
          "description": "Maximum value of the model.",
          "default": 5
        },
        "step": {
          "type": "number",
          "description": "Step amount between values."
        },
        "value": {
          "type": "string",
          "description": "The initial value for this field."
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "Input.FileUpload": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user upload a file.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.FileUpload\"`.",
          "enum": [
            "Input.FileUpload"
          ]
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Email": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter an email.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        },
        {
          "$ref": "#/definitions/CardscriptField"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Email\"`.",
          "enum": [
            "Input.Email"
          ]
        },
        "icon": {
          "type": "string",
          "description": "Name of an icon to prefix email input with."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Currency": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a currency value.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Currency\"`.",
          "enum": [
            "Input.Currency"
          ]
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no text has been input."
        },
        "max": {
          "type": "number",
          "description": "Hint of maximum value (may be ignored by some clients)."
        },
        "min": {
          "type": "number",
          "description": "Hint of minimum value (may be ignored by some clients)."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Address": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter an address.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Address\"`.",
          "enum": [
            "Input.Address"
          ]
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.ApiLookup": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user look up a value via an API.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.ApiLookup\"`.",
          "enum": [
            "Input.ApiLookup"
          ]
        },
        "showPagination": {
          "type": "boolean",
          "description": "Whether or not to show pagination for the results",
          "default": false
        },
        "resultsPerPage": {
          "type": "integer",
          "description": "Amount of results to show per page",
          "default": 15
        },
        "buttonText": {
          "type": "string",
          "description": "Text to display for the button to launch the api lookup",
          "default": "Go"
        },
        "endpoint": {
          "type": "object",
          "description": "The endpoint to gather results from.",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the endpoint"
            }
          },
          "required": [
            "name"
          ]
        },
        "ctxPaths": {
          "type": "object",
          "description": "Specify paths to data",
          "properties": {
            "results": {
              "type": "string",
              "description": "Path to the results of the api lookup"
            },
            "totalHits": {
              "type": "string",
              "description": "Path to the value of the total hits from the results of the api lookup"
            }
          },
          "required": [
            "results",
            "totalHits"
          ]
        },
        "parametersCard": {
          "$ref": "#/definitions/AdaptiveCard"
        },
        "resultsCard": {
          "$ref": "#/definitions/AdaptiveCard"
        }
      },
      "required": [
        "type",
        "id",
        "endpoint",
        "ctxPaths"
      ]
    },
    "Input.Gender": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a gender.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Gender\"`.",
          "enum": [
            "Input.Gender"
          ]
        },
        "term": {
          "type": "string",
          "description": "Whether the gender or sex should be asked.",
          "enum": [
            "sex",
            "gender"
          ],
          "default": "gender"
        },
        "preferNotToSay": {
          "type": "boolean",
          "description": "Includes Prefer not to say gender in list.",
          "default": false
        },
        "preferToSelfDescribe": {
          "type": "boolean",
          "description": "Includes Prefer not to self describe gender in list.",
          "default": false
        },
        "includeTransgender": {
          "type": "boolean",
          "description": "Includes transgender in list.",
          "default": false
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Name": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a name.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Name\"`.",
          "enum": [
            "Input.Name"
          ]
        },
        "icon": {
          "type": "string",
          "description": "Name of an icon to prefix name input with."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Signature": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a signature.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Signature\"`.",
          "enum": [
            "Input.Signature"
          ]
        },
        "agreement": {
          "type": "string",
          "description": "Agreement text to be displayed above the signature pad."
        },
        "saveText": {
          "type": "string",
          "description": "Customise the text of the save button."
        },
        "guidance": {
          "type": "string",
          "description": "Guidance text to be displayed with the signature button."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.TelephoneNumber": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a telephone number.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.TelephoneNumber\"`.",
          "enum": [
            "Input.TelephoneNumber"
          ]
        },
        "connectionType": {
          "type": "string",
          "description": "What type of phone is this number related to?.",
          "enum": [
            "mobile",
            "landline"
          ]
        },
        "icon": {
          "type": "string",
          "description": "Name of an icon to prefix telephone-number input with."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.DateTime": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter a telephone number.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.DateTime\"`.",
          "enum": [
            "Input.DateTime"
          ]
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no text has been input."
        },
        "clearable": {
          "type": "boolean",
          "description": "Whether the user can clear the data."
        },
        "withSeconds": {
          "type": "boolean",
          "description": "Whether to display and allow the user to enter seconds",
          "default": false
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Text": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user enter text.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "isMultiline": {
          "type": "boolean",
          "description": "If `true`, allow multiple lines of input.",
          "default": false
        },
        "maxLength": {
          "type": "number",
          "description": "Hint of maximum length characters to collect (may be ignored by some clients)."
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no text has been input."
        },
        "style": {
          "$ref": "#/definitions/TextInputStyle"
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Text\"`.",
          "enum": [
            "Input.Text"
          ]
        },
        "value": {
          "type": "string",
          "description": "The initial value for this field."
        },
        "editor": {
          "type": "boolean",
          "default": false,
          "description": "Whether the field should be a WYSIWYG (“what you see is what you get”) editor, if false then plain text field."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Time": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user select a time.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "max": {
          "type": "string",
          "description": "Hint of maximum value (may be ignored by some clients)."
        },
        "min": {
          "type": "string",
          "description": "Hint of minimum value (may be ignored by some clients)."
        },
        "placeholder": {
          "type": "string",
          "description": "Description of the input desired. Displayed when no time has been selected."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Input.Time\"`.",
          "enum": [
            "Input.Time"
          ]
        },
        "value": {
          "type": "string",
          "description": "The initial value for this field expressed in ISO-8601 format."
        }
      },
      "required": [
        "type",
        "id"
      ]
    },
    "Input.Toggle": {
      "additionalProperties": true,
      "type": "object",
      "description": "Lets a user choose between two options.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the value. Used to identify collected input when the Submit action is performed."
        },
        "title": {
          "type": "string",
          "description": "Title for the toggle"
        },
        "type": {
          "type": "string",
          "description": "Input.Toggle",
          "enum": [
            "Input.Toggle"
          ]
        },
        "value": {
          "type": "string",
          "description": "The current selected value. If the item is selected that \"valueOn\" will be used, otherwise \"valueOff\"",
          "default": "false"
        },
        "valueOff": {
          "type": "string",
          "description": "The value when toggle is off",
          "default": "false"
        },
        "valueOn": {
          "type": "string",
          "description": "The value when toggle is on",
          "default": "true"
        }
      },
      "required": [
        "type",
        "id",
        "title"
      ]
    },
    "List": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays information in List format.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"List\"`.",
          "enum": [
            "List"
          ]
        },
        "title": {
          "type": "string",
          "description": "Title displayed for the `List`."
        },
        "arrayPath": {
          "type": "string",
          "description": "Points to the array of data to be displayed."
        },
        "selectionType": {
          "type": "string",
          "description": "Whether the use can select a value.",
          "enum": [
            "none",
            "single",
            "multi"
          ]
        },
        "rowKey": {
          "type": "string",
          "description": "Points to the object key that uniquely identifies the record"
        },
        "templates": {
          "type": "object",
          "description": "Templates to render when displaying the list items",
          "properties": {
            "label": {
              "type": "string",
              "description": "Template to render for the label of the list item"
            },
            "sublabel": {
              "type": "string",
              "description": "Template to render for the sublabel of the list item"
            },
            "stamp": {
              "type": "string",
              "description": "Template to render for the stamp of the list item"
            }
          }
        },
        "showLaunches": {
          "type": "boolean",
          "description": "Whether to show launches menu for list items",
          "default": false
        },
        "showTotal": {
          "type": "boolean",
          "description": "Whether to show the value of the total amount of items in the list",
          "default": false
        },
        "notFoundText": {
          "type": "string",
          "description": "Text to display if nothing to display in the list",
          "default": "0 results found"
        },
        "clickToLaunch": {
          "type": "boolean",
          "description": "Whether to make the item label launchable",
          "default": false
        }
      },
      "required": [
        "id",
        "type",
        "arrayPath"
      ]
    },
    "Tree": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays some information in a tree format.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Tree\"`.",
          "enum": [
            "Tree"
          ]
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TreeItem"
          }
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "TreeItem": {
      "type": "object",
      "description": "Nodes belonging to a tree structure",
      "properties": {
        "label": {
          "type": "string",
          "description": "Title displayed for the tree item."
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TreeItem"
          }
        }
      },
      "required": [
        "label"
      ]
    },
    "Table": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays information in table format.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"Table\"`.",
          "enum": [
            "Table"
          ]
        },
        "title": {
          "type": "string",
          "description": "Title displayed for the `Table`."
        },
        "arrayPath": {
          "type": "string",
          "description": "Points to the array of data to be displayed."
        },
        "rowKey": {
          "type": "string",
          "description": "The property that uniquely identifies the row."
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Title displayed for the column."
              },
              "field": {
                "type": "string",
                "description": "Points to the data to be displayed in the column."
              }
            },
            "required": [
              "title",
              "field"
            ]
          }
        },
        "resultLimit": {
          "type": "integer",
          "description": "Limit the results per page.",
          "default": 10
        },
        "showLaunches": {
          "type": "boolean",
          "description": "Whether or not to show a menu of actions.",
          "default": "false"
        },
        "selectionType": {
          "type": "string",
          "description": "Whether the use can select a value.",
          "enum": [
            "none",
            "single",
            "multi"
          ],
          "default": "none"
        }
      },
      "required": [
        "id",
        "type",
        "arrayPath",
        "columns"
      ]
    },
    "TextBlock": {
      "additionalProperties": true,
      "type": "object",
      "description": "Displays text, allowing control over font sizes, weight, and color.",
      "allOf": [
        {
          "$ref": "#/definitions/CardElement"
        }
      ],
      "properties": {
        "color": {
          "type": "string",
          "description": "Controls the color of `TextBlock` elements.",
          "enum": [
            "default",
            "dark",
            "light",
            "accent",
            "good",
            "warning",
            "attention"
          ]
        },
        "horizontalAlignment": {
          "$ref": "#/definitions/HorizontalAlignment"
        },
        "isSubtle": {
          "type": "boolean",
          "description": "If `true`, displays text slightly toned down to appear less prominent.",
          "default": false
        },
        "maxLines": {
          "type": "number",
          "description": "Specifies the maximum number of lines to display."
        },
        "size": {
          "type": "string",
          "description": "Controls size of text.",
          "enum": [
            "small",
            "default",
            "medium",
            "large",
            "extraLarge"
          ]
        },
        "text": {
          "type": "string",
          "description": "Text to display."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"TextBlock\"`.",
          "enum": [
            "TextBlock"
          ]
        },
        "weight": {
          "type": "string",
          "description": "Controls the weight of `TextBlock` elements.",
          "enum": [
            "lighter",
            "default",
            "bolder"
          ]
        },
        "wrap": {
          "type": "boolean",
          "description": "If `true`, allow text to wrap. Otherwise, text is clipped.",
          "default": true
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "SeparatorStyle": {
      "type": "object",
      "description": "Indicates whether there should be a visible separator (i.e. a line) between the element and its predecessor. If not specified, no separator is displayed. A separator will only be displayed if there is a preceding element.",
      "properties": {
        "thickness": {
          "type": "string",
          "description": "Specifies separator thickness.",
          "enum": [
            "default",
            "thick"
          ]
        },
        "color": {
          "type": "string",
          "description": "Specifies separator color.",
          "enum": [
            "default",
            "accent"
          ]
        }
      }
    },
    "SpacingStyle": {
      "type": "string",
      "description": "Controls the amount of spacing between this element and the preceding element.",
      "enum": [
        "none",
        "small",
        "default",
        "medium",
        "large",
        "extraLarge",
        "padding"
      ]
    },
    "TextInputStyle": {
      "type": "string",
      "default": "text",
      "description": "Style hint for `Input.Text`.",
      "enum": [
        "text",
        "tel",
        "url",
        "email"
      ]
    },
    "Jumbotron": {
      "additionalProperties": true,
      "type": "object",
      "description": "An element typically placed at the top of a card to describe its purpose.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Jumbotron\"`.",
          "enum": [
            "Jumbotron"
          ]
        },
        "title": {
          "type": "string",
          "description": "Text to be displayed as heading."
        },
        "subtitle": {
          "type": "string",
          "description": "Text to be displayed as subheading."
        },
        "wash": {
          "type": "string",
          "enum": [
            "white",
            "black"
          ],
          "description": "Type of wash to have over the background."
        },
        "backgroundImage": {
          "type": "string",
          "description": "Relative URL to image to be displayed as background."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "Chip": {
      "additionalProperties": true,
      "type": "object",
      "description": "A chip to display some text.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Chip\"`.",
          "enum": [
            "Chip"
          ]
        },
        "text": {
          "type": "string",
          "description": "Text to be displayed in chip."
        },
        "color": {
          "type": "string",
          "description": "Color of the chip"
        }
      },
      "required": [
        "type",
        "text"
      ]
    },
    "Collapsible": {
      "additionalProperties": true,
      "type": "object",
      "description": "A container which expands when clicked on to show a card.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Must be `\"Collapsible\"`.",
          "enum": [
            "Collapsible"
          ]
        },
        "title": {
          "type": "string",
          "description": "Text to be displayed as label."
        },
        "card": {
          "$ref": "#/definitions/AdaptiveCard"
        }
      },
      "required": [
        "type",
        "title",
        "card"
      ]
    },
    "CardList": {
      "additionalProperties": true,
      "type": "object",
      "description": "A container which opens a modal when clicked on to show a card.",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier associated with the element."
        },
        "type": {
          "type": "string",
          "description": "Must be `\"CardList\"`.",
          "enum": [
            "CardList"
          ]
        },
        "addButtonLabel": {
          "type": "string",
          "description": "Text to be displayed as label of button."
        },
        "card": {
          "$ref": "#/definitions/AdaptiveCard"
        },
        "instanceTitleTemplate": {
          "type": "string",
          "description": "A handlebars-like template for conjuring a title per instance."
        },
        "instanceSubtitleTemplate": {
          "type": "string",
          "description": "A handlebars-like template for conjuring a subtitle per instance."
        }
      },
      "required": [
        "id",
        "type",
        "title",
        "card"
      ]
    }
  }
}
